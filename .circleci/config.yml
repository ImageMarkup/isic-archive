version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7
      - image: mongo:3.4

    working_directory: /home/circleci/project # as $CIRCLE_WORKING_DIRECTORY

    environment:
      - GIRDER_VERSION: cb7cc3a0194eee752354d48057c64e7f8edede00
      - WORKER_VERSION: 042a69d6ae7d472e32242d98f8b7acb3148980f9
      - LARGE_IMAGE_VERSION: e055e9f8f69efc2485da42a15a34cc947dd9a839

    steps:
      - run:
          name: Install Node.js
          command: |
            curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm install -g npm

      - run:
          name: Install Girder dependencies
          command: sudo apt-get install -y cmake
      - run:
          name: Install Pillow dependencies
          # https://pillow.readthedocs.org/en/latest/installation.html)
          command: sudo apt-get install -y libtiff5-dev libjpeg-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev tcl8.5-dev tk8.5-dev python-tk
      - run:
          name: Install isic_archive dependencies
          command: sudo apt-get install -y p7zip-full

      - run:
          name: Clone Girder
          #command: git clone --depth 1 --branch $GIRDER_VERSION -- https://github.com/girder/girder.git girder
          command: |
            git clone https://github.com/girder/girder.git girder
            git -C girder checkout $GIRDER_VERSION
      - run:
          name: Clone girder_worker
          #command: git clone --depth 1 --branch $WORKER_VERSION -- https://github.com/girder/girder_worker.git girder_worker
          command: |
            git clone https://github.com/girder/girder_worker.git girder_worker
            git -C girder_worker checkout $WORKER_VERSION
      - run:
          name: Clone large_image
          #command: git clone --depth 1 --branch $LARGE_IMAGE_VERSION -- https://github.com/girder/large_image.git girder/plugins/large_image
          command: |
            git clone https://github.com/girder/large_image.git girder/plugins/large_image
            git -C girder/plugins/large_image checkout $LARGE_IMAGE_VERSION
      - checkout:
          path: girder/plugins/isic_archive

      - run:
          name: Create and activate virtualenv
          command: |
            virtualenv venv
            echo "source $CIRCLE_WORKING_DIRECTORY/venv/bin/activate" >> $BASH_ENV
      - run:
          name: Create cache key
          command: cat girder/setup.py girder/requirements-dev.txt girder_worker/setup.py girder/plugins/large_image/setup.py girder/plugins/isic_archive/requirements.txt | sha512sum > venv-req-hash.txt
      - restore_cache:
          key: venv-{{ checksum "venv-req-hash.txt" }}
      - run:
          name: Install Girder
          command: |
            pip install -e girder
            pip install -r girder/requirements-dev.txt
      - run:
          name: Install girder_worker
          command: pip install -e girder_worker
        # TODO: set up worker.local.cfg
        # cp $PWD/plugin_tests/test_files/girder_worker.cfg $girder_worker_path/girder_worker/worker.local.cfg
      - run:
          name: Install large_image
          command: |
            pip install 'numpy>=1.10.2'
            girder-install plugin girder/plugins/large_image
      - run:
          name: Install isic_archive
          command: girder-install plugin girder/plugins/isic_archive
      - run:
          name: Install coverage client
          command: pip install codecov
      - save_cache:
          paths: venv
          key: venv-{{ checksum "venv-req-hash.txt" }}

      - restore_cache:
          # TODO: "girder/package.json" is getting modified during the build
          # key: npm-{{ checksum "girder/package.json" }}-{{ checksum "girder/plugins/isic_archive/plugin.json" }}
          key: npm-girder2.2.0-{{ checksum "girder/plugins/isic_archive/plugin.json" }}
      - run:
          name: Build Girder web client
          command: girder-install web --dev --plugins=isic_archive
          environment:
            - npm_config_cache: /home/circleci/project/npm_cache
      - save_cache:
          paths: npm_cache
          # key: npm-{{ checksum "girder/package.json" }}-{{ checksum "girder/plugins/isic_archive/plugin.json" }}
          key: npm-girder2.2.0-{{ checksum "girder/plugins/isic_archive/plugin.json" }}

      - run:
          name: Create Girder build directory
          command: mkdir girder_build
      - run:
          name: Run CMake
          command: |
            cmake -DPYTHON_COVERAGE:BOOL=ON -DCOVERAGE_MINIMUM_PASS:STRING=40 -DPYTHON_VERSION:STRING=2.7 -DRUN_CORE_TESTS:BOOL=OFF -DTEST_PLUGINS:STRING="isic_archive" $CIRCLE_WORKING_DIRECTORY/girder
            make
          working_directory: girder_build
      # TODO: start girder_worker?
      - run:
          name: Run CTest
          # js_coverage_combine_report may fail due to an upstream bug
          command: ctest -VV -E 'js_coverage'
          environment:
            - JASMINE_TIMEOUT: 15000
          working_directory: girder_build

      - run:
          name: Upload coverage
          command: codecov --disable search pycov gcov --file $CIRCLE_WORKING_DIRECTORY/girder_build/coverage.xml
          working_directory: girder/plugins/isic_archive
