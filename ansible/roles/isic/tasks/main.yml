---

- name: Download
  git:
    repo: "https://github.com/ImageMarkup/isic-archive.git"
    dest: "{{ isic_archive_path }}"
    version: "{{ isic_archive_version }}"
    clone: "{{ isic_archive_clone }}"
    update: no
    force: yes
  notify: Build Girder

- name: Install package dependencies
  apt:
    name: "{{ item }}"
  become: yes
  with_items:
    - p7zip-full

- name: Install large_image plugin
  command: "{{ python_dist_path }}/bin/girder-install plugin --force --symlink {{ large_image_path }}"
  notify:
    - Restart Girder
    - Build Girder

- name: Install ISIC Archive
  command: "{{ python_dist_path }}/bin/girder-install plugin --force --symlink {{ isic_archive_path }}"
  notify:
    - Restart Girder
    - Build Girder

- name: Install Girder client for Girder Ansible module
  block:
    - apt:
        name: python-pip
    - pip:
        name: girder-client
  become: yes

- meta: flush_handlers

- name: Create admin user
  port: "{{ girder_port }}"
  girder:
    user:
      firstName: "Provision"
      lastName: "Admin"
      login: "{{ girder_admin_username }}"
      password: "{{ girder_admin_password }}"
      email: "provision.admin@isic-archive.com"
      admin: yes
    state: present

- name: Create assetstore
  girder:
    username: "{{ girder_admin_username }}"
    password: "{{ girder_admin_password }}"
    port: "{{ girder_port }}"
    assetstore:
      name: "Default"
      type: "filesystem"
      root: "{{ isic_archive_assetstore_path }}"
      current: true
    state: present

- name: Enable isic_archive plugin
  girder:
    username: "{{ girder_admin_username }}"
    password: "{{ girder_admin_password }}"
    port: "{{ girder_port }}"
    plugins:
      - isic_archive
    state: present
  notify:
    - Restart Girder
    - Build Girder

- meta: flush_handlers

- name: Set girder_worker plugin settings
  girder:
    username: "{{ girder_admin_username }}"
    password: "{{ girder_admin_password }}"
    port: "{{ girder_port }}"
    setting:
      key: "{{ item }}"
      value: "mongodb://localhost:27017/girder_worker"
    state: present
  with_items:
    - "worker.backend"
    - "worker.broker"
  notify: Restart Girder

- name: Set CORS settings
  girder:
    username: "{{ girder_admin_username }}"
    password: "{{ girder_admin_password }}"
    port: "{{ girder_port }}"
    setting:
      key: "{{ item.key }}"
      value: "{{ item.value }}"
    state: present
  with_items:
    - key: "core.cors.allow_origin"
      value: "{{ isic_cors_allow_origin }}"
    - key: "core.cors.allow_methods"
      value: "{{ isic_cors_allow_methods }}"

- name: Set ISIC settings
  girder:
    username: "{{ girder_admin_username }}"
    password: "{{ girder_admin_password }}"
    port: "{{ girder_port }}"
    setting:
      key: "{{ item.key }}"
      value: "{{ item.value }}"
    state: present
  with_items:
    - key: "core.email_host"
      value: "{{ isic_email_host }}"
    - key: "core.smtp_host"
      value: "{{ isic_smtp_host }}"
    - key: "core.smtp.port"
      value: "{{ isic_smtp_port }}"
    - key: "core.smtp.username"
      value: "{{ isic_smtp_username }}"
    - key: "core.smtp.password"
      value: "{{ isic_smtp_password }}"
    - key: "core.smtp.encryption"
      value: "{{ isic_smtp_encryption }}"
    - key: "core.email_verification"
      value: "{{ isic_email_verification }}"

- name: Remount webroots
  girder:
    username: "{{ girder_admin_username }}"
    password: "{{ girder_admin_password }}"
    port: "{{ girder_port }}"
    setting:
      key: "core.route_table"
      value:
        core_girder: "/girder"
        core_static_root: "/static"
        isic_archive: "/admin"
        isic_archive_integration: "/"
        markup: "/markup"
    state: present
  notify: Restart Girder
