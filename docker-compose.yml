---
version: '3'
services:
  web:
    build:
      context: .
      dockerfile: ./dev/Dockerfile
    command: [
      "girder", "serve",
      "--host", "0.0.0.0"]
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/isic-archive
      - /assetstore
    ports:
      - 8080:8080
    depends_on:
      - mongo
      - redis
      - rabbitmq
      - mailhog
      - minio

  worker:
    build:
      context: .
      dockerfile: ./dev/Dockerfile
    command: [
      "celery", "worker",
      "--app", "isic_archive.celery",
      "--loglevel", "info"]
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/isic-archive
    depends_on:
      - mongo
      - redis
      - rabbitmq
      - mailhog
      - minio

  celerybeat:
    build:
      context: .
      dockerfile: ./dev/Dockerfile
    command: [
      "celery", "beat",
      "--app", "isic_archive.celery",
      "--schedule", "/tmp/celerybeat-schedule.db",
      "--pidfile", "/tmp/celerybeat.pid",
      "--loglevel", "info"]
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/isic-archive
    depends_on:
      - mongo
      - redis
      - rabbitmq
      - mailhog
      - minio

  mongo:
    image: mongo:latest
    ports:
      - 27017:27017

  redis:
    image: redis:latest

  rabbitmq:
    image: rabbitmq:latest

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 8025:8025

  minio:
    image: minio/minio:latest
    entrypoint: sh
    command: -c 'mkdir -p /minio-data/test-upload-bucket && /usr/bin/minio server /minio-data'
    environment:
      MINIO_ACCESS_KEY: minioAdminAccessKey
      MINIO_SECRET_KEY: minioAdminSecretKey
    volumes:
      - /data
    ports:
      - 9000:9000
